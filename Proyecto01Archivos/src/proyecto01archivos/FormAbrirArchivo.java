/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto01archivos;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author criss
 */
public class FormAbrirArchivo extends javax.swing.JFrame {

    /**
     * Creates new form FormAbrirArchivo
     */
    public FormAbrirArchivo() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seleccionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        seleccionar.setText("Seleccionar");
        seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seleccionarMouseClicked(evt);
            }
        });
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(seleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(seleccionar)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seleccionarMouseClicked
        // TODO add your handling code here:
        JFileChooser pdfruta = new JFileChooser();
        pdfruta.showOpenDialog(null);
        File archivo = pdfruta.getSelectedFile();
        LecturaAleatoria(archivo);
    }//GEN-LAST:event_seleccionarMouseClicked

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarActionPerformed
    private void LecturaAleatoria(File ruta)
    {
        int referencia = 0;
        String cadena="";
        String nombres = "";
        String info = "";
        int root = 0;
        try {
            RandomAccessFile archivo = new RandomAccessFile(ruta,"r");
            byte ref[] = new byte[9];
            //version del pdf
            cadena = archivo.readLine();
            System.out.println("Version pdf: " + cadena);
            
            //regresamos 300 bytes para buscar la posicion de la tabla de las referencias
            archivo.seek(archivo.length() - 350);
            while((cadena = archivo.readLine()) != null){
             //System.out.println( cadena);
             if("startxref".equals(cadena))
             {               
                 cadena = archivo.readLine();
                 //System.out.println( cadena);
                 System.out.println("-------------------");
                 referencia = Integer.parseInt(cadena);
                 //System.out.println("Referencia: " + referencia);
                 break;
             }
             else if("trailer".equals(cadena))
             {
                 info = archivo.readLine();
                 if("<<".equals(info))
                 {
                     info += archivo.readLine();
                     info += archivo.readLine();
                     info += archivo.readLine();
                 }
             }
            }
            
             String[] partir = info.split("/");
             int a = info.split("/").length;
             int auxRef = 0;
             String buscador ="";
             for(int j=1; j<a; j++)
             {
                 for(int k=0; k<4; k++)
                 {
                     buscador+= partir[j].charAt(k);
                 }
                 if("Info".equals(buscador))
                 {
                     String[] auxPartir = partir[j].split(" ");
                     auxRef = Integer.parseInt(auxPartir[1]);
                 }
                 else if("Root".equals(buscador))
                 {
                     String[] auxPartir = partir[j].split(" ");
                     root = Integer.parseInt(auxPartir[1]);
                 }
                 else{
                     buscador="";
                 }
             }
             
            archivo.seek(referencia);
            cadena = archivo.readLine(); // lee xref
            cadena = archivo.readLine(); // lee el valor a donde tenemos que ir para leer los metadatos
            int aux =0;
            String dato = "";
            try
            {
            for(int i = 2; i< cadena.length(); i++)
                   {
                       dato += cadena.charAt(i);
                   }
            
            
            aux = Integer.parseInt(dato); // convertir el valor de los metadatos a entero
            }
            catch(NumberFormatException e)
            {
                System.out.println("No se puede convertir");
                aux = 0;
            }
            if(aux != auxRef + 1)
            {
                if(auxRef == 0)
                {
                    auxRef = aux;
                    nombres = "No se encontro ninguna referencia de los metadatos";
                }
                aux = auxRef + 1;
            }
            
            //System.out.println("Numero: " + aux);
           
            
            byte meta[] = new byte[10];
            int contador = 0;
            archivo.seek(referencia);
       
            if(!"No se encontro ninguna referencia de los metadatos".equals(nombres))
            {
            while((cadena = archivo.readLine()) != null){
                //System.out.println( cadena);
               if(contador == aux)
               {
                   archivo.read(meta);
                   referencia = Integer.parseInt(new String(meta));
                   //System.out.println("Byte de referencia: " + referencia);
                   archivo.seek(referencia);
                   //System.out.println("leyendo metadatos");
                   cadena = archivo.readLine();
                   cadena = archivo.readLine();
                   cadena = archivo.readLine();
                   for(int i = 0; i< 5; i++)
                   {
                       cadena = archivo.readLine();
                       if(cadena.equals("endobj"))
                       {
                           i =5;
                       }
                       else
                       {
                       nombres += cadena + '\n';
                       }
                   }
                   break;
               }
             contador++;
            }
            
            }
            System.out.println("los metadatos son: " +'\n'+ nombres);
            System.out.println("TamaÃ±o del archivo: " + archivo.getChannel().size() + " Bytes");
            archivo.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAbrirArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAbrirArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAbrirArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAbrirArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAbrirArchivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton seleccionar;
    // End of variables declaration//GEN-END:variables
}
